// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.17.3
// source: favorites.proto

package proto

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type UserFavRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId  int32 `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	GoodsId int32 `protobuf:"varint,2,opt,name=goods_id,json=goodsId,proto3" json:"goods_id,omitempty"`
}

func (x *UserFavRequest) Reset() {
	*x = UserFavRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_favorites_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserFavRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserFavRequest) ProtoMessage() {}

func (x *UserFavRequest) ProtoReflect() protoreflect.Message {
	mi := &file_favorites_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserFavRequest.ProtoReflect.Descriptor instead.
func (*UserFavRequest) Descriptor() ([]byte, []int) {
	return file_favorites_proto_rawDescGZIP(), []int{0}
}

func (x *UserFavRequest) GetUserId() int32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *UserFavRequest) GetGoodsId() int32 {
	if x != nil {
		return x.GoodsId
	}
	return 0
}

type FavResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId    int32   `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	GoodsId   int32   `protobuf:"varint,2,opt,name=goods_id,json=goodsId,proto3" json:"goods_id,omitempty"`
	Title     string  `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`
	ShopPrice float32 `protobuf:"fixed32,4,opt,name=shop_price,json=shopPrice,proto3" json:"shop_price,omitempty"`
	Stocks    int32   `protobuf:"varint,5,opt,name=stocks,proto3" json:"stocks,omitempty"`
	OnSale    bool    `protobuf:"varint,6,opt,name=on_sale,json=onSale,proto3" json:"on_sale,omitempty"`
}

func (x *FavResponse) Reset() {
	*x = FavResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_favorites_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FavResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FavResponse) ProtoMessage() {}

func (x *FavResponse) ProtoReflect() protoreflect.Message {
	mi := &file_favorites_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FavResponse.ProtoReflect.Descriptor instead.
func (*FavResponse) Descriptor() ([]byte, []int) {
	return file_favorites_proto_rawDescGZIP(), []int{1}
}

func (x *FavResponse) GetUserId() int32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *FavResponse) GetGoodsId() int32 {
	if x != nil {
		return x.GoodsId
	}
	return 0
}

func (x *FavResponse) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *FavResponse) GetShopPrice() float32 {
	if x != nil {
		return x.ShopPrice
	}
	return 0
}

func (x *FavResponse) GetStocks() int32 {
	if x != nil {
		return x.Stocks
	}
	return 0
}

func (x *FavResponse) GetOnSale() bool {
	if x != nil {
		return x.OnSale
	}
	return false
}

type FavListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total int32          `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	Data  []*FavResponse `protobuf:"bytes,2,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *FavListResponse) Reset() {
	*x = FavListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_favorites_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FavListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FavListResponse) ProtoMessage() {}

func (x *FavListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_favorites_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FavListResponse.ProtoReflect.Descriptor instead.
func (*FavListResponse) Descriptor() ([]byte, []int) {
	return file_favorites_proto_rawDescGZIP(), []int{2}
}

func (x *FavListResponse) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *FavListResponse) GetData() []*FavResponse {
	if x != nil {
		return x.Data
	}
	return nil
}

type FavStatusResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Checked bool `protobuf:"varint,1,opt,name=checked,proto3" json:"checked,omitempty"`
}

func (x *FavStatusResponse) Reset() {
	*x = FavStatusResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_favorites_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FavStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FavStatusResponse) ProtoMessage() {}

func (x *FavStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_favorites_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FavStatusResponse.ProtoReflect.Descriptor instead.
func (*FavStatusResponse) Descriptor() ([]byte, []int) {
	return file_favorites_proto_rawDescGZIP(), []int{3}
}

func (x *FavStatusResponse) GetChecked() bool {
	if x != nil {
		return x.Checked
	}
	return false
}

var File_favorites_proto protoreflect.FileDescriptor

var file_favorites_proto_rawDesc = []byte{
	0x0a, 0x0f, 0x66, 0x61, 0x76, 0x6f, 0x72, 0x69, 0x74, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x44,
	0x0a, 0x0e, 0x55, 0x73, 0x65, 0x72, 0x46, 0x61, 0x76, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x67, 0x6f, 0x6f,
	0x64, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x67, 0x6f, 0x6f,
	0x64, 0x73, 0x49, 0x64, 0x22, 0xa7, 0x01, 0x0a, 0x0b, 0x46, 0x61, 0x76, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x19, 0x0a,
	0x08, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x07, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x1d,
	0x0a, 0x0a, 0x73, 0x68, 0x6f, 0x70, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x02, 0x52, 0x09, 0x73, 0x68, 0x6f, 0x70, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73,
	0x74, 0x6f, 0x63, 0x6b, 0x73, 0x12, 0x17, 0x0a, 0x07, 0x6f, 0x6e, 0x5f, 0x73, 0x61, 0x6c, 0x65,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x6f, 0x6e, 0x53, 0x61, 0x6c, 0x65, 0x22, 0x49,
	0x0a, 0x0f, 0x46, 0x61, 0x76, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x20, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x46, 0x61, 0x76, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x2d, 0x0a, 0x11, 0x46, 0x61, 0x76,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x07, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x65, 0x64, 0x32, 0xd2, 0x01, 0x0a, 0x09, 0x46, 0x61, 0x76,
	0x6f, 0x72, 0x69, 0x74, 0x65, 0x73, 0x12, 0x29, 0x0a, 0x08, 0x51, 0x75, 0x65, 0x72, 0x79, 0x46,
	0x61, 0x76, 0x12, 0x0f, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x46, 0x61, 0x76, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x0c, 0x2e, 0x46, 0x61, 0x76, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x31, 0x0a, 0x0c, 0x51, 0x75, 0x65, 0x72, 0x79, 0x46, 0x61, 0x76, 0x4c, 0x69, 0x73,
	0x74, 0x12, 0x0f, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x46, 0x61, 0x76, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x10, 0x2e, 0x46, 0x61, 0x76, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x31, 0x0a, 0x06, 0x41, 0x64, 0x64, 0x46, 0x61, 0x76, 0x12, 0x0f,
	0x2e, 0x55, 0x73, 0x65, 0x72, 0x46, 0x61, 0x76, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x34, 0x0a, 0x09, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x46, 0x61, 0x76, 0x12, 0x0f, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x46, 0x61, 0x76, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x42, 0x09, 0x5a,
	0x07, 0x2e, 0x3b, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_favorites_proto_rawDescOnce sync.Once
	file_favorites_proto_rawDescData = file_favorites_proto_rawDesc
)

func file_favorites_proto_rawDescGZIP() []byte {
	file_favorites_proto_rawDescOnce.Do(func() {
		file_favorites_proto_rawDescData = protoimpl.X.CompressGZIP(file_favorites_proto_rawDescData)
	})
	return file_favorites_proto_rawDescData
}

var file_favorites_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_favorites_proto_goTypes = []interface{}{
	(*UserFavRequest)(nil),    // 0: UserFavRequest
	(*FavResponse)(nil),       // 1: FavResponse
	(*FavListResponse)(nil),   // 2: FavListResponse
	(*FavStatusResponse)(nil), // 3: FavStatusResponse
	(*emptypb.Empty)(nil),     // 4: google.protobuf.Empty
}
var file_favorites_proto_depIdxs = []int32{
	1, // 0: FavListResponse.data:type_name -> FavResponse
	0, // 1: Favorites.QueryFav:input_type -> UserFavRequest
	0, // 2: Favorites.QueryFavList:input_type -> UserFavRequest
	0, // 3: Favorites.AddFav:input_type -> UserFavRequest
	0, // 4: Favorites.DeleteFav:input_type -> UserFavRequest
	1, // 5: Favorites.QueryFav:output_type -> FavResponse
	2, // 6: Favorites.QueryFavList:output_type -> FavListResponse
	4, // 7: Favorites.AddFav:output_type -> google.protobuf.Empty
	4, // 8: Favorites.DeleteFav:output_type -> google.protobuf.Empty
	5, // [5:9] is the sub-list for method output_type
	1, // [1:5] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_favorites_proto_init() }
func file_favorites_proto_init() {
	if File_favorites_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_favorites_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserFavRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_favorites_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FavResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_favorites_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FavListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_favorites_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FavStatusResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_favorites_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_favorites_proto_goTypes,
		DependencyIndexes: file_favorites_proto_depIdxs,
		MessageInfos:      file_favorites_proto_msgTypes,
	}.Build()
	File_favorites_proto = out.File
	file_favorites_proto_rawDesc = nil
	file_favorites_proto_goTypes = nil
	file_favorites_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// FavoritesClient is the client API for Favorites service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type FavoritesClient interface {
	// 收藏
	QueryFav(ctx context.Context, in *UserFavRequest, opts ...grpc.CallOption) (*FavResponse, error)
	QueryFavList(ctx context.Context, in *UserFavRequest, opts ...grpc.CallOption) (*FavListResponse, error)
	AddFav(ctx context.Context, in *UserFavRequest, opts ...grpc.CallOption) (*emptypb.Empty, error)
	DeleteFav(ctx context.Context, in *UserFavRequest, opts ...grpc.CallOption) (*emptypb.Empty, error)
}

type favoritesClient struct {
	cc grpc.ClientConnInterface
}

func NewFavoritesClient(cc grpc.ClientConnInterface) FavoritesClient {
	return &favoritesClient{cc}
}

func (c *favoritesClient) QueryFav(ctx context.Context, in *UserFavRequest, opts ...grpc.CallOption) (*FavResponse, error) {
	out := new(FavResponse)
	err := c.cc.Invoke(ctx, "/Favorites/QueryFav", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *favoritesClient) QueryFavList(ctx context.Context, in *UserFavRequest, opts ...grpc.CallOption) (*FavListResponse, error) {
	out := new(FavListResponse)
	err := c.cc.Invoke(ctx, "/Favorites/QueryFavList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *favoritesClient) AddFav(ctx context.Context, in *UserFavRequest, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, "/Favorites/AddFav", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *favoritesClient) DeleteFav(ctx context.Context, in *UserFavRequest, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, "/Favorites/DeleteFav", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// FavoritesServer is the server API for Favorites service.
type FavoritesServer interface {
	// 收藏
	QueryFav(context.Context, *UserFavRequest) (*FavResponse, error)
	QueryFavList(context.Context, *UserFavRequest) (*FavListResponse, error)
	AddFav(context.Context, *UserFavRequest) (*emptypb.Empty, error)
	DeleteFav(context.Context, *UserFavRequest) (*emptypb.Empty, error)
}

// UnimplementedFavoritesServer can be embedded to have forward compatible implementations.
type UnimplementedFavoritesServer struct {
}

func (*UnimplementedFavoritesServer) QueryFav(context.Context, *UserFavRequest) (*FavResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method QueryFav not implemented")
}
func (*UnimplementedFavoritesServer) QueryFavList(context.Context, *UserFavRequest) (*FavListResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method QueryFavList not implemented")
}
func (*UnimplementedFavoritesServer) AddFav(context.Context, *UserFavRequest) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddFav not implemented")
}
func (*UnimplementedFavoritesServer) DeleteFav(context.Context, *UserFavRequest) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteFav not implemented")
}

func RegisterFavoritesServer(s *grpc.Server, srv FavoritesServer) {
	s.RegisterService(&_Favorites_serviceDesc, srv)
}

func _Favorites_QueryFav_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UserFavRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FavoritesServer).QueryFav(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Favorites/QueryFav",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FavoritesServer).QueryFav(ctx, req.(*UserFavRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Favorites_QueryFavList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UserFavRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FavoritesServer).QueryFavList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Favorites/QueryFavList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FavoritesServer).QueryFavList(ctx, req.(*UserFavRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Favorites_AddFav_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UserFavRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FavoritesServer).AddFav(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Favorites/AddFav",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FavoritesServer).AddFav(ctx, req.(*UserFavRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Favorites_DeleteFav_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UserFavRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FavoritesServer).DeleteFav(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Favorites/DeleteFav",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FavoritesServer).DeleteFav(ctx, req.(*UserFavRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Favorites_serviceDesc = grpc.ServiceDesc{
	ServiceName: "Favorites",
	HandlerType: (*FavoritesServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "QueryFav",
			Handler:    _Favorites_QueryFav_Handler,
		},
		{
			MethodName: "QueryFavList",
			Handler:    _Favorites_QueryFavList_Handler,
		},
		{
			MethodName: "AddFav",
			Handler:    _Favorites_AddFav_Handler,
		},
		{
			MethodName: "DeleteFav",
			Handler:    _Favorites_DeleteFav_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "favorites.proto",
}
