version: "3"

networks:
  kong-net:
    name: kong-net
    driver: bridge

services:
  #######################################
  # Postgres: The database used by Kong
  #######################################
  kong-database:
    container_name: postgres
    image: postgres:9.6
    restart: always
    networks:
      - kong-net
    environment:
      POSTGRES_USER: kong
      POSTGRES_DB: kong
      POSTGRES_PASSWORD: ecs123
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "kong"]
      interval: 30s
      timeout: 30s
      retries: 3

  #######################################
  # Kong database migration 只需运行一次
  #######################################
  # kong-migration:
  #   container_name: kong_migration
  #   image: kong:latest
  #   command: "kong migrations bootstrap"
  #   restart: always
  #   networks:
  #     - kong-net
  #   environment:
  #     KONG_DATABASE: postgres
  #     KONG_PG_HOST: kong-database
  #     POSTGRES_USER: kong
  #     KONG_PG_PASSWORD: ecs123
  #     KONG_CASSANDRA_CONTACT_POINTS: kong-database
  #   depends_on:
  #     - kong-database

  #######################################
  # Kong: The API Gateway
  #######################################
  kong:
    container_name: kong
    image: kong:latest
    restart: always
    networks:
      - kong-net
    environment:
      KONG_DATABASE: postgres
      # KONG_PG_HOST: kong-database
      KONG_PG_HOST: 192.168.31.106
      KONG_PG_USER: kong
      KONG_PG_PASSWORD: ecs123
      KONG_CASSANDRA_CONTACT_POINTS: kong-database
      KONG_DNS_RESOLVER: 192.168.31.106:8600 # consul host
      KONG_PROXY_ACCESS_LOG: /dev/stdout
      KONG_ADMIN_ACCESS_LOG: /dev/stdout
      KONG_PROXY_ERROR_LOG: /dev/stderr
      KONG_ADMIN_ERROR_LOG: /dev/stderr
      KONG_PROXY_LISTEN: 0.0.0.0:8000
      KONG_PROXY_LISTEN_SSL: 0.0.0.0:8443
      KONG_ADMIN_LISTEN: 0.0.0.0:8001
      KONG_ADMIN_LISTEN_SSL: 0.0.0.0:8444
    # volumes:
    #   - ./kong.conf:/etc/kong/kong.conf
    depends_on:
      - kong-database
    ports:
      - "8001:8001"
      - "8000:8000"
      - "8443:8443"
      - "8444:8444"
    # healthcheck:
    #   test: ["CMD", "curl", "-f", "http://192.168.31.106:8001"]
    #   interval: 30s
    #   timeout: 30s
    #   retries: 3

  ##########################################
  # Konga database prepare 只需执行一次
  ##########################################
  # konga-prepare:
  #   container_name: konga-prepare
  #   image: pantsel/konga:latest
  #   command: "-c prepare -a postgres -u postgresql://kong:ecs123@kong-database:5432/konga"
  #   networks:
  #     - kong-net
  #   links:
  #     - kong-database
  #   depends_on:
  #     - kong-database

  ##########################################
  # Konga: The Kong GUI
  ##########################################
  konga:
    container_name: konga
    image: pantsel/konga:latest
    networks:
      - kong-net
    restart: always
    environment:
      TOKEN_SECRET: km1GUr4RkcQD7DewhJPNXrCuZwcKmqjb #konga签名JWT的token
      DB_ADAPTER: postgres
      DB_HOST: kong-database
      DB_USER: kong
      DB_PASSWORD: ecs123
      DB_DATABASE: konga
      KONGA_HOOK_TIMEOUT: 120000
      NODE_ENV: development
    ports:
      - "1337:1337"
    depends_on:
      - kong-database
      - kong
    links:
      - kong-database
      - kong